@model MVCLayoutTest.Models.Member
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    ViewBag.Title = "Login";
}
<script type="text/javascript">
    //alert("login");
</script>
<style type="text/css">
    td {
        padding-bottom: 3px;
    }

    .textbox {
        width: 200px;
        height: 35px;
    }

    /* Validation 문자 쓰기 */
    .field-validation-error{
        color:red;
    }
</style>
<div class="content" style="text-align:center;">
    <div class="forms" style="display:inline-block;">
        <h2>@ViewBag.Title</h2>



        @* 로그인 페이지
            form 속성의 onsubmit 속성을 활용해서 기본적인 조건을 체크한다
             1. 빈 값을 넣을 경우 - 에러메세지 출력 후 리턴

                빈 값이 아닌 경우 - 컨트롤러를 요청한다. ~/Home/LoginValidate
        *@
        @using (@Html.BeginForm())
        {
            @Html.ValidationSummary(true)
            @Html.AntiForgeryToken()
            <table>
                <tr>
                    <td>
                        @Html.LabelFor(model => model.user_id)
                        @Html.TextBoxFor(model => model.user_id)
                        @Html.ValidationMessageFor(model => model.user_id)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(model => model.user_pwd)
                        @Html.TextBoxFor(model => model.user_pwd)
                        @Html.ValidationMessageFor(model => model.user_pwd)
                    </td>
                </tr>
                <tr>
                    <td>
                        <input type="submit" class="btn btn-primary" value="Validate" />
                    </td>
                </tr>
            </table>
        }

    </div>
</div>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>

<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")"

